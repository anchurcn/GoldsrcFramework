// This file is a demo of entity_exports.cpp
// The actual entity_exports.cpp file is generated by the build system on your mod build
// It contains the actual entity export functions for your mod

typedef struct entvars_s entvars_t;
typedef void (_cdecl *PrivateDataAllocatorFunc)(entvars_t* pev);
void* GetPrivateDataAllocator(const char* const pszEntityClassName);

// Entity private data allocation function table structure
struct PrivateDataAllocFuncs
{
	// Legacy Half-Life entities - populated dynamically
	// Function pointers will be set during initialization
	// GENERATED
	PrivateDataAllocatorFunc monster_flyer;
	PrivateDataAllocatorFunc monster_flyer_flock;
	PrivateDataAllocatorFunc monster_alien_grunt;
	PrivateDataAllocatorFunc monster_apache;
	PrivateDataAllocatorFunc monster_barnacle;
	PrivateDataAllocatorFunc monster_barney;
	PrivateDataAllocatorFunc monster_barney_dead;
	PrivateDataAllocatorFunc func_wall;
};

PrivateDataAllocFuncs g_allocFuncs = { 0 };

//InitializePrivateDataAllocators
void InitializePrivateDataAllocators()
{
	// Set up the function pointers for legacy Half-Life entities
	// GENERATED
	g_allocFuncs.monster_flyer = (PrivateDataAllocatorFunc)GetPrivateDataAllocator("monster_flyer");
	g_allocFuncs.monster_flyer_flock = (PrivateDataAllocatorFunc)GetPrivateDataAllocator("monster_flyer_flock");
	g_allocFuncs.monster_alien_grunt = (PrivateDataAllocatorFunc)GetPrivateDataAllocator("monster_alien_grunt");
	g_allocFuncs.monster_apache = (PrivateDataAllocatorFunc)GetPrivateDataAllocator("monster_apache");
	g_allocFuncs.monster_barnacle = (PrivateDataAllocatorFunc)GetPrivateDataAllocator("monster_barnacle");
	g_allocFuncs.monster_barney = (PrivateDataAllocatorFunc)GetPrivateDataAllocator("monster_barney");
	g_allocFuncs.monster_barney_dead = (PrivateDataAllocatorFunc)GetPrivateDataAllocator("monster_barney_dead");
	g_allocFuncs.func_wall = (PrivateDataAllocatorFunc)GetPrivateDataAllocator("func_wall");
}

// GENERATED
extern "C" __declspec(dllexport) void monster_flyer(entvars_t* pev)
{
	g_allocFuncs.monster_flyer(pev);
}

extern "C" __declspec(dllexport) void monster_flyer_flock(entvars_t* pev)
{
	g_allocFuncs.monster_flyer_flock(pev);
}

extern "C" __declspec(dllexport) void monster_alien_grunt(entvars_t* pev)
{
	g_allocFuncs.monster_alien_grunt(pev);
}

extern "C" __declspec(dllexport) void monster_apache(entvars_t* pev)
{
	g_allocFuncs.monster_apache(pev);
}

extern "C" __declspec(dllexport) void monster_barnacle(entvars_t* pev)
{
	g_allocFuncs.monster_barnacle(pev);
}

extern "C" __declspec(dllexport) void monster_barney(entvars_t* pev)
{
	g_allocFuncs.monster_barney(pev);
}

extern "C" __declspec(dllexport) void monster_barney_dead(entvars_t* pev)
{
	g_allocFuncs.monster_barney_dead(pev);
}

extern "C" __declspec(dllexport) void func_wall(entvars_t* pev)
{
	g_allocFuncs.func_wall(pev);
}