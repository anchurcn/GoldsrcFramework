using System;
using System.Runtime.InteropServices;

namespace GoldsrcFramework.Engine.Native;

/// <summary>
/// Client engine functions structure that matches cl_enginefunc_t layout
/// </summary>
[StructLayout(LayoutKind.Sequential)]
public unsafe struct ClientEngineFuncs
{
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, HSPRITE> SPR_Load;
    public delegate* unmanaged[Cdecl]<HSPRITE, int> SPR_Frames;
    public delegate* unmanaged[Cdecl]<HSPRITE, int, int> SPR_Height;
    public delegate* unmanaged[Cdecl]<HSPRITE, int, int> SPR_Width;
    public delegate* unmanaged[Cdecl]<HSPRITE, int, int, int, void> SPR_Set;
    public delegate* unmanaged[Cdecl]<int, int, int, Rect*, void> SPR_Draw;
    public delegate* unmanaged[Cdecl]<int, int, int, Rect*, void> SPR_DrawHoles;
    public delegate* unmanaged[Cdecl]<int, int, int, Rect*, void> SPR_DrawAdditive;
    public delegate* unmanaged[Cdecl]<int, int, int, int, void> SPR_EnableScissor;
    public delegate* unmanaged[Cdecl]<void> SPR_DisableScissor;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int*, client_sprite_s*> SPR_GetList;
    public delegate* unmanaged[Cdecl]<int, int, int, int, int, int, int, int, void> FillRGBA;
    public delegate* unmanaged[Cdecl]<SCREENINFO*, int> GetScreenInfo;
    public delegate* unmanaged[Cdecl]<HSPRITE, Rect, int, int, int, void> SetCrosshair;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, int, cvar_s*> RegisterVariable;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, float> GetCvarFloat;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*> GetCvarString;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, delegate* unmanaged[Cdecl]<void>, int> AddCommand;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int, void*, int>, int> HookUserMsg;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> ServerCmd;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> ClientCmd;
    public delegate* unmanaged[Cdecl]<int, hud_player_info_s*, void> GetPlayerInfo;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, float, void> PlaySoundByName;
    public delegate* unmanaged[Cdecl]<int, float, void> PlaySoundByIndex;
    public delegate* unmanaged[Cdecl]<float*, float*, float*, float*, void> AngleVectors;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, client_textmessage_s*> TextMessageGet;
    public delegate* unmanaged[Cdecl]<int, int, int, int, int, int, int> DrawCharacter;
    public delegate* unmanaged[Cdecl]<int, int, NativeInterop.NChar*, int> DrawConsoleString;
    public delegate* unmanaged[Cdecl]<float, float, float, void> DrawSetTextColor;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int*, int*, void> DrawConsoleStringLen;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> ConsolePrint;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> CenterPrint;
    public delegate* unmanaged[Cdecl]<int> GetWindowCenterX;
    public delegate* unmanaged[Cdecl]<int> GetWindowCenterY;
    public delegate* unmanaged[Cdecl]<float*, void> GetViewAngles;
    public delegate* unmanaged[Cdecl]<float*, void> SetViewAngles;
    public delegate* unmanaged[Cdecl]<int> GetMaxClients;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, float, void> Cvar_SetValue;
    public delegate* unmanaged[Cdecl]<int> Cmd_Argc;
    public delegate* unmanaged[Cdecl]<int, NativeInterop.NChar*> Cmd_Argv;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> Con_Printf;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> Con_DPrintf;
    public delegate* unmanaged[Cdecl]<int, NativeInterop.NChar*, void> Con_NPrintf;
    public delegate* unmanaged[Cdecl]<con_nprint_s*, NativeInterop.NChar*, void> Con_NXPrintf;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*> PhysInfo_ValueForKey;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*> ServerInfo_ValueForKey;
    public delegate* unmanaged[Cdecl]<float> GetClientMaxspeed;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar**, int> CheckParm;
    public delegate* unmanaged[Cdecl]<int, int, void> Key_Event;
    public delegate* unmanaged[Cdecl]<int*, int*, void> GetMousePosition;
    public delegate* unmanaged[Cdecl]<int> IsNoClipping;
    public delegate* unmanaged[Cdecl]<cl_entity_s*> GetLocalPlayer;
    public delegate* unmanaged[Cdecl]<cl_entity_s*> GetViewModel;
    public delegate* unmanaged[Cdecl]<int, cl_entity_s*> GetEntityByIndex;
    public delegate* unmanaged[Cdecl]<float> GetClientTime;
    public delegate* unmanaged[Cdecl]<void> V_CalcShake;
    public delegate* unmanaged[Cdecl]<float*, float*, float, void> V_ApplyShake;
    public delegate* unmanaged[Cdecl]<float*, int*, int> PM_PointContents;
    public delegate* unmanaged[Cdecl]<float*, int> PM_WaterEntity;
    public delegate* unmanaged[Cdecl]<float*, float*, int, int, int, pmtrace_s*> PM_TraceLine;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int*, model_s*> CL_LoadModel;
    public delegate* unmanaged[Cdecl]<int, cl_entity_s*, int> CL_CreateVisibleEntity;
    public delegate* unmanaged[Cdecl]<HSPRITE, model_s*> GetSpritePointer;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, float, float*, void> PlaySoundByNameAtLocation;
    public delegate* unmanaged[Cdecl]<int, NativeInterop.NChar*, ushort> PrecacheEvent;
    public delegate* unmanaged[Cdecl]<int, edict_t*, ushort, float, float*, float*, float, float, int, int, int, int, void> PlaybackEvent;
    public delegate* unmanaged[Cdecl]<int, int, void> WeaponAnim;
    public delegate* unmanaged[Cdecl]<float, float, float> RandomFloat;
    public delegate* unmanaged[Cdecl]<int, int, int> RandomLong;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, delegate* unmanaged[Cdecl]<event_args_s*, void>, void> HookEvent;
    public delegate* unmanaged[Cdecl]<int> Con_IsVisible;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*> GetGameDirectory;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, cvar_s*> GetCvarPointer;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*> Key_LookupBinding;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*> GetLevelName;
    public delegate* unmanaged[Cdecl]<screenfade_s*, void> GetScreenFade;
    public delegate* unmanaged[Cdecl]<screenfade_s*, void> SetScreenFade;
    public delegate* unmanaged[Cdecl]<void*> VGui_GetPanel;
    public delegate* unmanaged[Cdecl]<int, void> VGui_ViewportPaintBackground;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int, int*, byte*> COM_LoadFile;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*> COM_ParseFile;
    public delegate* unmanaged[Cdecl]<void*, void> COM_FreeFile;
    public triangleapi_s* pTriAPI;
    public efx_api_s* pEfxAPI;
    public event_api_s* pEventAPI;
    public demo_api_s* pDemoAPI;
    public net_api_s* pNetAPI;
    public IVoiceTweak_s* pVoiceTweak;
    public delegate* unmanaged[Cdecl]<int> IsSpectateOnly;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, model_s*> LoadMapSprite;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, void> COM_AddAppDirectoryToSearchPath;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, int> COM_ExpandFilename;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*> PlayerInfo_ValueForKey;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, void> PlayerInfo_SetValueForKey;
    public delegate* unmanaged[Cdecl]<int, qboolean> GetPlayerUniqueID;
    public delegate* unmanaged[Cdecl]<int, int> GetTrackerIDForPlayer;
    public delegate* unmanaged[Cdecl]<int, int> GetPlayerForTrackerID;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> ServerCmdUnreliable;
    public delegate* unmanaged[Cdecl]<int*, int*, void> GetMousePos;
    public delegate* unmanaged[Cdecl]<int, int, void> SetMousePos;
    public delegate* unmanaged[Cdecl]<qboolean, void> SetMouseEnable;
    public delegate* unmanaged[Cdecl]<cvar_s*> GetFirstCVarPtr;
    public delegate* unmanaged[Cdecl]<void*> GetFirstCmdFunctionHandle;
    public delegate* unmanaged[Cdecl]<void*, void*> GetNextCmdFunctionHandle;
    public delegate* unmanaged[Cdecl]<void*, NativeInterop.NChar*> GetCmdFunctionName;
    public delegate* unmanaged[Cdecl]<float> hudGetClientOldTime;
    public delegate* unmanaged[Cdecl]<float> hudGetServerGravityValue;
    public delegate* unmanaged[Cdecl]<int, model_s*> hudGetModelByIndex;
    public delegate* unmanaged[Cdecl]<int, void> SetFilterMode;
    public delegate* unmanaged[Cdecl]<float, float, float, void> SetFilterColor;
    public delegate* unmanaged[Cdecl]<float, void> SetFilterBrightness;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, sentenceEntry_s*> SequenceGet;
    public delegate* unmanaged[Cdecl]<int, int, int, int, int, int, int, void> SPR_DrawGeneric;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, int, NativeInterop.NChar*> SequencePickSentence;
    public delegate* unmanaged[Cdecl]<int, int, NativeInterop.NChar*, int> DrawString;
    public delegate* unmanaged[Cdecl]<int, int, NativeInterop.NChar*, int> DrawStringReverse;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*> LocalPlayerInfo_ValueForKey;
    public delegate* unmanaged[Cdecl]<int, int, int, int, int, int, int> VGUI2DrawCharacter;
    public delegate* unmanaged[Cdecl]<int, int, int, int, int, int, int> VGUI2DrawCharacterAdd;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, float> COM_GetApproxWavePlayLength;
    public delegate* unmanaged[Cdecl]<void*> GetCareerUI;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, void> Cvar_Set;
    public delegate* unmanaged[Cdecl]<int> IsCareerMatch;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, float, int, void> PlaySoundVoiceByName;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int, void> PrimeMusicStream;
    public delegate* unmanaged[Cdecl]<float> GetAbsoluteTime;
    public delegate* unmanaged[Cdecl]<int*, int*, void> ProcessTutorMessageDecayBuffer;
    public delegate* unmanaged[Cdecl]<int*, int*, void> ConstructTutorMessageDecayBuffer;
    public delegate* unmanaged[Cdecl]<void> ResetTutorMessageDecayData;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, float, int, void> PlaySoundByNameAtPitch;
    public delegate* unmanaged[Cdecl]<int, int, int, int, int, int, int, int, void> FillRGBABlend;
    public delegate* unmanaged[Cdecl]<int> GetAppID;
    public delegate* unmanaged[Cdecl]<cmdalias_t*> GetAliasList;
    public delegate* unmanaged[Cdecl]<int*, int*, void> VguiWrap2_GetMouseDelta;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> FilteredClientCmd;
}

// Additional structures are defined in EngineTypes.cs
