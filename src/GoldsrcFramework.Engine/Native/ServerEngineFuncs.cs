using System;
using System.Runtime.InteropServices;

namespace GoldsrcFramework.Engine.Native;

/// <summary>
/// Server engine functions structure that matches enginefuncs_t layout
/// </summary>
[StructLayout(LayoutKind.Sequential)]
public unsafe struct ServerEngineFuncs
{
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> PrecacheModel;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> PrecacheSound;
    public delegate* unmanaged[Cdecl]<edict_t*, NativeInterop.NChar*, void> SetModel;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> ModelIndex;
    public delegate* unmanaged[Cdecl]<int, int> ModelFrames;
    public delegate* unmanaged[Cdecl]<edict_t*, float*, float*, void> SetSize;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, void> ChangeLevel;
    public delegate* unmanaged[Cdecl]<edict_t*, void> GetSpawnParms;
    public delegate* unmanaged[Cdecl]<edict_t*, void> SaveSpawnParms;
    public delegate* unmanaged[Cdecl]<float*, float> VecToYaw;
    public delegate* unmanaged[Cdecl]<float*, float*, void> VecToAngles;
    public delegate* unmanaged[Cdecl]<edict_t*, float*, float, int, void> MoveToOrigin;
    public delegate* unmanaged[Cdecl]<edict_t*, void> ChangeYaw;
    public delegate* unmanaged[Cdecl]<edict_t*, void> ChangePitch;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, edict_t*> FindEntityByString;
    public delegate* unmanaged[Cdecl]<edict_t*, int> GetEntityIllum;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, edict_t*> FindEntityInSphere;
    public delegate* unmanaged[Cdecl]<edict_t*, edict_t*> FindClientInPVS;
    public delegate* unmanaged[Cdecl]<edict_t*, edict_t*> EntitiesInPVS;
    public delegate* unmanaged[Cdecl]<float*, void> MakeVectors;
    public delegate* unmanaged[Cdecl]<float*, float*, void> AngleVectors;
    public delegate* unmanaged[Cdecl]<edict_t*> CreateEntity;
    public delegate* unmanaged[Cdecl]<edict_t*, void> RemoveEntity;
    public delegate* unmanaged[Cdecl]<edict_t*> CreateNamedEntity;
    public delegate* unmanaged[Cdecl]<edict_t*, void> MakeStatic;
    public delegate* unmanaged[Cdecl]<edict_t*, int> EntIsOnFloor;
    public delegate* unmanaged[Cdecl]<edict_t*, int> DropToFloor;
    public delegate* unmanaged[Cdecl]<edict_t*, edict_t*, float, int> WalkMove;
    public delegate* unmanaged[Cdecl]<float*, float*, edict_t*, void> SetOrigin;
    public delegate* unmanaged[Cdecl]<int, int, float*, float*, edict_t*, float, void> EmitSound;
    public delegate* unmanaged[Cdecl]<int, int, float*, float*, edict_t*, float, float, void> EmitAmbientSound;
    public delegate* unmanaged[Cdecl]<float*, float*, float*, TraceResult*, void> TraceLine;
    public delegate* unmanaged[Cdecl]<float*, float*, int, edict_t*, TraceResult*, void> TraceToss;
    public delegate* unmanaged[Cdecl]<float*, float*, int, float*, float*, edict_t*, TraceResult*, int> TraceMonsterHull;
    public delegate* unmanaged[Cdecl]<float*, float*, int, edict_t*, TraceResult*, void> TraceHull;
    public delegate* unmanaged[Cdecl]<edict_t*, float*, float*, TraceResult*, void> TraceModel;
    public delegate* unmanaged[Cdecl]<float*, NativeInterop.NChar*> TraceTexture;
    public delegate* unmanaged[Cdecl]<float*, float*, void> TraceSphere;
    public delegate* unmanaged[Cdecl]<float*, void> GetAimVector;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> ServerCommand;
    public delegate* unmanaged[Cdecl]<void> ServerExecute;
    public delegate* unmanaged[Cdecl]<edict_t*, NativeInterop.NChar*, void> ClientCommand;
    public delegate* unmanaged[Cdecl]<int, int, float*, void> ParticleEffect;
    public delegate* unmanaged[Cdecl]<float*, void> LightStyle;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> DecalIndex;
    public delegate* unmanaged[Cdecl]<float*, int> PointContents;
    public delegate* unmanaged[Cdecl]<edict_t*, int, NativeInterop.NChar*, void> MessageBegin;
    public delegate* unmanaged[Cdecl]<void> MessageEnd;
    public delegate* unmanaged[Cdecl]<byte, void> WriteByte;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar, void> WriteChar;
    public delegate* unmanaged[Cdecl]<short, void> WriteShort;
    public delegate* unmanaged[Cdecl]<int, void> WriteLong;
    public delegate* unmanaged[Cdecl]<float, void> WriteAngle;
    public delegate* unmanaged[Cdecl]<float, void> WriteCoord;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> WriteString;
    public delegate* unmanaged[Cdecl]<edict_t*, void> WriteEntity;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> CVarRegister;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, float> CVarGetFloat;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*> CVarGetString;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, float, void> CVarSetFloat;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, void> CVarSetString;
    public delegate* unmanaged[Cdecl]<int, NativeInterop.NChar*, void> AlertMessage;
    public delegate* unmanaged[Cdecl]<edict_t*, void> EngineFprintf;
    public delegate* unmanaged[Cdecl]<edict_t*, void*> PvAllocEntPrivateData;
    public delegate* unmanaged[Cdecl]<edict_t*, void*> PvEntPrivateData;
    public delegate* unmanaged[Cdecl]<edict_t*, void> FreeEntPrivateData;
    public delegate* unmanaged[Cdecl]<int, NativeInterop.NChar*> SzFromIndex;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> AllocString;
    public delegate* unmanaged[Cdecl]<edict_t*, entvars_t*> GetVarsOfEnt;
    public delegate* unmanaged[Cdecl]<entvars_t*, edict_t*> PEntityOfEntOffset;
    public delegate* unmanaged[Cdecl]<edict_t*, int> EntOffsetOfPEntity;
    public delegate* unmanaged[Cdecl]<edict_t*, int> IndexOfEdict;
    public delegate* unmanaged[Cdecl]<int, edict_t*> PEntityOfEntIndex;
    public delegate* unmanaged[Cdecl]<edict_t*, edict_t*> FindEntityByVars;
    public delegate* unmanaged[Cdecl]<edict_t*, void*> GetModelPtr;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> RegUserMsg;
    public delegate* unmanaged[Cdecl]<void> AnimationAutomove;
    public delegate* unmanaged[Cdecl]<edict_t*, void> GetBonePosition;
    public delegate* unmanaged[Cdecl]<uint, uint> FunctionFromName;
    public delegate* unmanaged[Cdecl]<uint, NativeInterop.NChar*> NameForFunction;
    public delegate* unmanaged[Cdecl]<edict_t*, NativeInterop.NChar*, void> ClientPrintf;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> ServerPrint;
    public delegate* unmanaged[Cdecl]<int> Cmd_Args;
    public delegate* unmanaged[Cdecl]<int> Cmd_Argc;
    public delegate* unmanaged[Cdecl]<int, NativeInterop.NChar*> Cmd_Argv;
    public delegate* unmanaged[Cdecl]<edict_t*, int, void> GetAttachment;
    public delegate* unmanaged[Cdecl]<void> CRC32_Init;
    public delegate* unmanaged[Cdecl]<uint*, byte, void> CRC32_ProcessBuffer;
    public delegate* unmanaged[Cdecl]<uint, void> CRC32_ProcessByte;
    public delegate* unmanaged[Cdecl]<uint, uint> CRC32_Final;
    public delegate* unmanaged[Cdecl]<int, int> RandomLong;
    public delegate* unmanaged[Cdecl]<float, float, float> RandomFloat;
    public delegate* unmanaged[Cdecl]<edict_t*, int, void> SetView;
    public delegate* unmanaged[Cdecl]<float> Time;
    public delegate* unmanaged[Cdecl]<edict_t*, edict_t*, void> CrosshairAngle;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int*, byte*> LoadFileForMe;
    public delegate* unmanaged[Cdecl]<void*, void> FreeFile;
    public delegate* unmanaged[Cdecl]<void> EndSection;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, int> CompareFileTime;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> GetGameDir;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> Cvar_RegisterVariable;
    public delegate* unmanaged[Cdecl]<edict_t*, float*, void> FadeClientVolume;
    public delegate* unmanaged[Cdecl]<edict_t*, int, void> SetClientMaxspeed;
    public delegate* unmanaged[Cdecl]<int, edict_t*> CreateFakeClient;
    public delegate* unmanaged[Cdecl]<edict_t*, NativeInterop.NChar*, float, void> RunPlayerMove;
    public delegate* unmanaged[Cdecl]<edict_t*, int> NumberOfEntities;
    public delegate* unmanaged[Cdecl]<edict_t*, NativeInterop.NChar*> GetInfoKeyBuffer;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, NativeInterop.NChar*> InfoKeyValue;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, NativeInterop.NChar*, void> SetKeyValue;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, NativeInterop.NChar*, void> SetClientKeyValue;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> IsMapValid;
    public delegate* unmanaged[Cdecl]<float*, float*, void> StaticDecal;
    public delegate* unmanaged[Cdecl]<int, int> PrecacheGeneric;
    public delegate* unmanaged[Cdecl]<edict_t*, int> GetPlayerUserId;
    public delegate* unmanaged[Cdecl]<int, float*, void> BuildSoundMsg;
    public delegate* unmanaged[Cdecl]<int> IsDedicatedServer;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, cvar_s*> CVarGetPointer;
    public delegate* unmanaged[Cdecl]<edict_t*, uint> GetPlayerWONId;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> Info_RemoveKey;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*> GetPhysicsKeyValue;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, NativeInterop.NChar*, void> SetPhysicsKeyValue;
    public delegate* unmanaged[Cdecl]<edict_t*, NativeInterop.NChar*> GetPhysicsInfoString;
    public delegate* unmanaged[Cdecl]<ushort, int> PrecacheEvent;
    public delegate* unmanaged[Cdecl]<int, edict_t*, ushort, float, float*, float*, float, float, int, int, int, int, void> PlaybackEvent;
    public delegate* unmanaged[Cdecl]<byte*, int, void> SetFatPVS;
    public delegate* unmanaged[Cdecl]<byte*, int, void> SetFatPAS;
    public delegate* unmanaged[Cdecl]<float*, int> CheckVisibility;
    public delegate* unmanaged[Cdecl]<int, void> DeltaSetField;
    public delegate* unmanaged[Cdecl]<int, void> DeltaUnsetField;
    public delegate* unmanaged[Cdecl]<int, void> DeltaAddEncoder;
    public delegate* unmanaged[Cdecl]<edict_t*, int> GetCurrentPlayer;
    public delegate* unmanaged[Cdecl]<int, int> CanSkipPlayer;
    public delegate* unmanaged[Cdecl]<int, int> DeltaFindField;
    public delegate* unmanaged[Cdecl]<void> DeltaSetFieldByIndex;
    public delegate* unmanaged[Cdecl]<void> DeltaUnsetFieldByIndex;
    public delegate* unmanaged[Cdecl]<edict_t*, int, void> SetGroupMask;
    public delegate* unmanaged[Cdecl]<int, int, void> engCreateInstancedBaseline;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> Cvar_DirectSet;
    public delegate* unmanaged[Cdecl]<edict_t*, NativeInterop.NChar*, void> ForceUnmodified;
    public delegate* unmanaged[Cdecl]<edict_t*, void> GetPlayerStats;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, void> AddServerCommand;
    public delegate* unmanaged[Cdecl]<int> Voice_GetClientListening;
    public delegate* unmanaged[Cdecl]<int, int, int> Voice_SetClientListening;
    public delegate* unmanaged[Cdecl]<edict_t*, NativeInterop.NChar*> GetPlayerAuthId;
    public delegate* unmanaged[Cdecl]<void*, int*, void*> SequenceGet;
    public delegate* unmanaged[Cdecl]<void*, NativeInterop.NChar*, int, NativeInterop.NChar*> SequencePickSentence;
    public delegate* unmanaged[Cdecl]<NativeInterop.NChar*, int> GetFileSize;
    public delegate* unmanaged[Cdecl]<edict_t*, uint> GetApproxWavePlayLen;
    public delegate* unmanaged[Cdecl]<int> IsCareerMatch;
    public delegate* unmanaged[Cdecl]<int> GetLocalizedStringLength;
    public delegate* unmanaged[Cdecl]<edict_t*, int, void> RegisterTutorMessageShown;
    public delegate* unmanaged[Cdecl]<edict_t*, int> GetTimesTutorMessageShown;
    public delegate* unmanaged[Cdecl]<int*, int*, void> ProcessTutorMessageDecayBuffer;
    public delegate* unmanaged[Cdecl]<int*, int*, void> ConstructTutorMessageDecayBuffer;
    public delegate* unmanaged[Cdecl]<void> ResetTutorMessageDecayData;
    public delegate* unmanaged[Cdecl]<edict_t*, NativeInterop.NChar*, NativeInterop.NChar*, void> QueryClientCvarValue;
    public delegate* unmanaged[Cdecl]<edict_t*, int, NativeInterop.NChar*, NativeInterop.NChar*, void> QueryClientCvarValue2;
    public delegate* unmanaged[Cdecl]<int*, int> EngCheckParm;
}

// Additional structures are defined in EngineTypes.cs
